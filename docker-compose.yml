services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER: postgres
      - POSTGRES_PASSWORD: admin
      - POSTGRES_DB: webapp
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d webapp"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data


  # pgAdmin для управления базой данных (опционально)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bss-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_CHECK_EMAIL_DELIVERABILITY: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - development
      - pgadmin


  backend-dev:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      DB_USER: bss_user
      DB_PASSWORD: bss_password
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: bss_database
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    container_name: nuxt-client
volumes:
  postgres_data:
  pgadmin_data:

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15
    container_name: bss-postgres
    environment:
      POSTGRES_DB: bss_database
      POSTGRES_USER: bss_user
      POSTGRES_PASSWORD: bss_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=ru_RU.UTF-8 --lc-ctype=ru_RU.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - bss-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bss_user -d bss_database"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # pgAdmin для управления базой данных (опционально)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bss-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_CHECK_EMAIL_DELIVERABILITY: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - bss-network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - development
      - pgadmin

  # Сервис для разработки с nodemon
  bss-server-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: bss-server-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://bss_user:bss_password@postgres:5432/bss_database
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=bss_database
      - DB_USER=bss_user
      - DB_PASSWORD=bss_password
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
      - /app/node_modules
    restart: unless-stopped
    networks:
      - bss-network
    depends_on:
      postgres:
        condition: service_healthy

  # Сервис для продакшена
  bss-server-prod:
    build: .
    container_name: bss-server-prod
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://bss_user:bss_password@postgres:5432/bss_database
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=bss_database
      - DB_USER=bss_user
      - DB_PASSWORD=bss_password
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - bss-network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  bss-network:
    driver: bridge